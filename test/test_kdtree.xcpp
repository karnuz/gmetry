#include "kdtree.h"
#include "point2d.h"
#include <vector>

using namespace std;

void test_createTree() {
  
  srand(time(0));
  int N = 1000000;
  vector<double> vecOfRandomNums(N);

  generate(vecOfRandomNums.begin(), vecOfRandomNums.end(), []()
                                                           {
                                                             return static_cast <double> (rand() % 2000 - 1000)/50.0;
                                                           });

  vector<Point2D<double>> points(N/2);

  for (int i = 0; i < N/2; i++) {
    points[i].x = vecOfRandomNums[2*i];
    points[i].y = vecOfRandomNums[2*i+1];
  }
  
  KDTree<Point2D<double>> kd;

  cout << "hereee\n";
  
  kd.createTree(points.begin(),points.end(),2, points.size());

  vector<Point2D<double>> tr = kd.InOrder();

  Point2D<double> d = {7.29,-0.2};
  Point2D<double> nn = kd.nearestNeighbor(&kd, d, 2);

  cout << "nearest neighbor to " << d << " is : " << nn;
  //  for (auto e: tr) {
  //  cout << e << "\n";
  //}
  
}

int main() {
  test_createTree();

}
